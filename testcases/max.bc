; ModuleID = 'testcases/max.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@main.arr = private unnamed_addr constant [8 x i64] [i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8], align 16

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %arr = alloca [8 x i64], align 16
  %ret = alloca i64, align 8
  %i = alloca i64, align 8
  store i32 0, i32* %retval, align 4
  %0 = bitcast [8 x i64]* %arr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([8 x i64]* @main.arr to i8*), i64 64, i32 16, i1 false)
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* %arr, i64 0, i64 0
  %1 = load i64, i64* %arrayidx, align 16
  store i64 %1, i64* %ret, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8
  %cmp = icmp slt i64 %2, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %i, align 8
  %arrayidx1 = getelementptr inbounds [8 x i64], [8 x i64]* %arr, i64 0, i64 %3
  %4 = load i64, i64* %arrayidx1, align 8
  %5 = load i64, i64* %ret, align 8
  %cmp2 = icmp sgt i64 %4, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %6 = load i64, i64* %i, align 8
  %arrayidx3 = getelementptr inbounds [8 x i64], [8 x i64]* %arr, i64 0, i64 %6
  %7 = load i64, i64* %arrayidx3, align 8
  store i64 %7, i64* %ret, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load i64, i64* %i, align 8
  %inc = add nsw i64 %8, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i64, i64* %ret, align 8
  %conv = trunc i64 %9 to i32
  ret i32 %conv
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.9.0 (trunk 260653)"}
